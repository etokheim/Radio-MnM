setup:
    # Debug (bool)
    # Default False
    debug: true

    # Render a virtual display in the console output
    # Default False
    virtualDisplay: false

    # Sets the log level when in production (production is when debug is False).
    # debug | info | warn (or warning) | error | critical
    # Default: info
    # Log level (str)
    productionLogLevel: info

    # Api server (str)
    # Which server the radio should connect to. The server is where the radio
    # registers, gets it's channels and information.
    apiServer: https://radio.tokheimgrafisk.no

    # Automatic updates (bool)
    # If enabled, checks for updates every night at 03:30.
    autoUpdate: true

    # Save listening history (bool)
    # Whether to store the listening history on the server.
    # For analytic and statistic purposes.
    saveListeningHistory: true
    
    # Send state (bool)
    # Whether to report the radio's state to the API.
    # Reports if the radio is on or off and it's local IP
    sendState: true


audio:
    # Bitrate (int)
    # The radio will choose the stream with bitrate closest to the value you set.
    # This variable will be moved to the server side later.
    # 32 kbps - Poor audio quality
    # 48 kbps - A reasonable lower end rate for longer speech-only podcasts
    # 64 kbps - A common bitrate for speech podcasts.
    # 128 kbps - Common standard for musical and high quality podcasts.
    # 320 kbps - Very high quality - almost indistinguishable from a CD.
    bitrate: 128

    # Volume (int, 0 - 100)
    # This value shouldn't be too high, as the built in sound card isn't the best.
    volume: 85


# Setup your components.
# If you are missing a component, it's easy to contribute to the project to add
# support for new components.
components:
    # Array of displays. Only one display is supported at this time.
    displays:
        - type: Character LCD
            width: 16
            height: 2
            GPIO:
                rs: 14
                en: 15
                data4: 13
                data5: 7
                data6: 5
                data7: 11
            lcdCompatibillityMode: true
            dotSize: 8
            lcdCharacterMap: A02

    # Array of power buttons. Clicking it will toggle the radio's on state.
    powerButtons:
        # - GPIO: 12

    # Array of power switches. Not reccomended for radio's which will be
    # turned on/off remotely.
    powerSwitches:
        # - GPIO: 12

    navigationRotaries:
        - GPIO:
            clk: 12
            data: 13
          type: mechanic
    
    # Array. An alternative to the easier to use navigationRotary, where left
    # is equal to scrolling to the left.
    navigationButtons:
        # - GPIO:
        #     left: 12
        #     right: 13

    # Array. Rotaries for controlling the volume.
    volumeRotaries:
        # - GPIO:
        #     clk: 12
        #     data: 13
        #   type: mechanic
    
    # Array. An alternative to the easier to use volumeRotaries, where down is
    # equal to rotating the volume rotary to the left.
    volumeButtons:
        - GPIO:
            up: 12
            down: 13

    # Array. A light which is turned on/off along with the radio to symbolise it's
    # current state.
    powerLights:
        - GPIO: 12

    # Array. Humidity/temperature sensors.
    DHT22s:
        - GPIO: 12