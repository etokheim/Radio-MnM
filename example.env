# Booleans can be set to true with:
# 	True | true | 1
# Everything else evaluates to false

###################################
#                                 #
#              Setup              #
#                                 #
###################################
# Debug (bool)
# Default False
mnm_debug=False

# Log level (str)
# Sets the log level when in production (production is when debug is False).
# debug | info | warn (or warning) | error | critical
# Default: info
mnm_productionLogLevel=info

# Api server (str)
# Which server the radio should connect to. The server is where the radio
# registers, gets it's channels and information.
mnm_apiServer=https://radio.tokheimgrafisk.no

# Automatic updates (bool)
# If enabled, checks for updates every night at 03:30.
mnm_autoUpdate=True

# Save listening history (bool)
# Whether to store the listening history on the server.
# For analytic and statistic purposes.
mnm_saveListeningHistory=True

# Send state (bool)
# Whether to report the radio's state to the API.
# Reports if the radio is on or off and it's local IP
mnm_sendState=True


###################################
#                                 #
#              Radio              #
#                                 #
###################################
# Bitrate (int)
# The radio will choose the stream with bitrate closest to the value you set.
# 32 kbps - Poor audio quality
# 48 kbps - A reasonable lower end rate for longer speech-only podcasts
# 64 kbps - A common bitrate for speech podcasts.
# 128 kbps - Common standard for musical and high quality podcasts.
# 320 kbps - Very high quality - almost indistinguishable from a CD.
mnm_bitrate=128

# Volume (int, 0 - 100)
# This value shouldn't be too high, as the built in sound card isn't the best.
mnm_volume=85


###################################
#                                 #
#             Display             #
#                                 #
###################################
# One line on the display is two lines in the code (bool)
# Weird display quirk, where one line on the display is two lines for the computer.
# Turn this on if only half of the display outputs its characters (horizontal).
# Or if the first half of the display shows the beginning of line 1 and the other
# half displays the beginning of line two.
mnm_oneDisplayLineIsTwoLines=False

# Display width – amount of characters (int)
mnm_displayWidth=16

# Display height – amount of characters (int)
mnm_displayHeight=2

# Which GPIO the lcd's rs pin goes to (int)
mnm_lcdRsToGpio=26

# Which GPIO the lcd's en pin goes to (int)
mnm_lcdEnToGpio=19

# Which GPIO the lcd's data pin 4 goes to (int)
mnm_lcdData4ToGpio=13

# Which GPIO the lcd's data pin 5 goes to (int)
mnm_lcdData5ToGpio=6

# Which GPIO the lcd's data pin 6 goes to (int)
mnm_lcdData6ToGpio=5

# Which GPIO the lcd's data pin 7 goes to (int)
mnm_lcdData7ToGpio=11

# LCD compatible mode (bool)
# Not all LCDs are made equal. It appears that some devices (especially those
# with non-original HD44780 controllers) don’t run at the reference clock, and
# as such, are out of specification when it comes to timings.
# 
# If you’ve been experiencing issues with garbled text occasionally on
# initialization/use of the display, try enabling the compatibility mode.
mnm_lcdCompatibleMode=True

# LCD dot size (int)
# Some 1 line displays allow a font height of 10px. Allowed: 8 or 10.
mnm_lcdDotSize=8

# Character map (str)
# The character to use. Depends on your LCD. This must be either A00 or A02 or
# ST0B.
mnm_lcdCharMap=A00